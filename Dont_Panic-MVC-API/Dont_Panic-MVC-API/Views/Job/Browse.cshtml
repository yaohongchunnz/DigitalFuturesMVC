@model IEnumerable<Dont_Panic_MVC_API.Models.API_Models.Job>
@using Dont_Panic_MVC_API.Controllers.API_Controllers;
@using Dont_Panic_MVC_API.Models.API_Models;

@if (User.Identity.IsAuthenticated)
{
    //  if (!User.IsInRole("Provider"))
    //  {
    //      Response.Redirect("~/Job/Index");
    //  }
}
else
{

    Response.Redirect("~/");
}

@{
    ViewBag.Title = "Browse Jobs";
}
<br />
<div class="container drop-shadow browse-jobs-block">
    <h3 class="centertext"><font color="#65B5A2">browse</font> jobs</h3>
    <br />
    <div class="row">
        <div class="col-md-4">
            <select class="form-control" required id="jobtype" name="jobtype">
                <option>Select Category...</option>
                <option>Plumbing</option>
                <option>Electrical</option>
                <option>Business</option>
                <option>Crafts</option>
                <option>Design and web</option>
                <option>Legal</option>
                <option>Personal</option>
                <option>Pets</option>
                <option>Photography</option>
                <option>Repair services</option>
                <option>Writing/Translation</option>
            </select>
        </div>
        <div class="col-md-4">
            <select class="form-control" required id="jobtype" name="jobtype">
                <option>Select City...</option>
                <option>Wellington</option>
                <option>Auckland</option>
            </select>
        </div>
        <div class="col-md-4">
            <select class="form-control" required id="jobtype" name="jobtype">
                <option>Sort By...</option>
                <option>Oldest</option>
                <option>Newest</option>
            </select>
        </div>
    </div>
    <br />
    @foreach (var item in Model)
    {

        @{
        PhotoAPI api = new PhotoAPI();
        Photos firstPhoto = api.getFirstPhoto(item.jobid);
        }
        if (!(DateTime.Now > item.expireDate))
        {
            <div class="job-block drop-shadow-lite">


                <div class="row">

                    @if (firstPhoto.photo != "")
                    {
                        <div class="col-md-3"><img src="@Url.Content(firstPhoto.photo)" alt="IMAGES" class="img-responsive job-block-image img-rounded" height="150" width="150" /></div>
                    }
                    else
                    {
                        <div class="col-md-3"><img src="~/Images/nophotoavailable.jpg" class="img-responsive job-block-image img-rounded" /></div>
                    }

                    <div class="col-md-9">
                        <p class="job-block-title">@Html.ActionLink(item.title, "Details", new { id = item.jobid }, new { @style = "color:#497769;" }) </p>
                        @{
                    var descript = item.description;
                    if (descript.Length > 50)
                    {
                        descript = descript.Substring(0, 50) + "...";
                    }
                        }
                        <p style="font-size:14px">@descript</p>

                        <div class="row">
                            <div class="job-block-detail-left col-md-6">
                                <p class="text-primary" style="font-size:12px">Category: @item.jobtype<br />Located in: @item.region<br />Leads remaining: @{int remain = 3 - @item.leadsAccquired;}@remain</p>
                            </div>
                            <div class="job-block-detail-right col-md-6">

                                <input type="button" onclick="location.href='/Job/Details/@item.jobid'" value="View Job" class="btn-dontpanic" />
                                @{
                                TimeSpan timeSincePost = DateTime.Now - item.submitDate;
                                string agoText;
                                }
                                @if (timeSincePost.Minutes > 1 && timeSincePost.Hours < 1)
                                {
                                    agoText = timeSincePost.Minutes.ToString() + " minutes ago";
                                }
                                else if (timeSincePost.Minutes == 1)
                                {
                                    agoText = timeSincePost.Minutes.ToString() + " minutes ago";
                                }
                                else if (timeSincePost.Minutes < 1)
                                {
                                    agoText = "less than a minute ago";
                                }
                                else if (timeSincePost.Hours > 1)
                                {
                                    agoText = timeSincePost.Hours.ToString() + "hrs ago";
                                }
                                else if (timeSincePost.Hours == 1)
                                {
                                    agoText = "an hr ago";
                                }
                                else
                                {
                                    agoText = "less than an hr ago";
                                }
                                <p class="text-primary" style="font-size:12px">Posted: @agoText</p>

                            </div>
                        </div>
                    </div>

                </div>

            </div>

        }
    }
    <br />
</div>