@model Dont_Panic_MVC_API.Models.ViewJob

@{
    ViewBag.Title = "Post Job";
}
<br />
<script language="javascript" type="text/javascript">

    window.onload = function () {
        if (sessionStorage.jobtitle != null) {
            document.getElementById("title").value = sessionStorage.jobtitle;
            var jobselect = document.getElementById("jobtype");
            for (var i = 0; i < jobselect.length; i++) {
                if (jobselect.options[i].text == sessionStorage.jobtype) {
                    jobselect.options[i].selected = true;
                }
            }

            if (sessionStorage.jobdescription != null) {
                document.getElementById("description").value = sessionStorage.jobdescription;

                var regionselect = document.getElementById("region");
                for (var i = 0; i < regionselect.length; i++) {
                    if (regionselect.options[i].value == sessionStorage.jobregion) {
                        regionselect.options[i].selected = true;
                    }
                }



                var districtselect = document.getElementById("district");
                districtselect.innerHTML = sessionStorage.jobdistrict;

                districtselect.options[sessionStorage.jobdistrictselection].selected = true;


                var suburbselect = document.getElementById("suburb");
                suburbselect.innerHTML = sessionStorage.jobsuburb;
                suburbselect.options[sessionStorage.jobsuburbselection].selected = true;

                var durationselect = document.getElementById("duration");
                for (var i = 0; i < durationselect.length; i++) {
                    if (durationselect.options[i].value == sessionStorage.jobduration) {
                        durationselect.options[i].selected = true;
                    }
                }



            }
            sessionStorage.clear();

        }
        if (document.getElementById("region").value == "") {
            setDistrict(false);
            setSuburb(false);
        }
        else {
            setDistrict(true);
            if (document.getElementById("district").value == "") {
                setSuburb(false);
            }
            else {
                setSuburb(true);
            }
        }
    }

    function saveInformation(saveOrNot) {
        if (!saveOrNot) {
            var titlebox = document.getElementById("title");
            var category = document.getElementById("jobtype");
            var description = document.getElementById("description");
            if (titlebox.value.length > 0 && description.value.length > 0) {
                sessionStorage.jobtitle = titlebox.value;
                sessionStorage.jobtype = category.value;
                sessionStorage.jobdescription = description.value;
                sessionStorage.jobregion = document.getElementById("region").value;
                sessionStorage.jobdistrict = document.getElementById("district").innerHTML;
                sessionStorage.jobsuburb = document.getElementById("suburb").innerHTML;
                sessionStorage.jobdistrictselection = document.getElementById("district").value;
                sessionStorage.jobsuburbselection = document.getElementById("suburb").value;
                sessionStorage.jobduration = document.getElementById("duration").value;
                alert("saved");
            }
        }
        else {
            sessionStorage.clear();
        }
    }

    var previousReg;
    function showHideSelect(select) {
        if (select.name == "region") {
            if (select.value != "") {
                setDistrict(true);
                if (previousReg != select.value) {
                    setSuburb(false);
                }

                previousReg = select.value;
            }
            else {
                setDistrict(false);
                setSuburb(false);
            }
        }
        else if (select.name == "district") {
            if (select.value != "") {
                setSuburb(true);
            }
            else {
                setSuburb(false);
            }
        }
    }
    function setDistrict(b) {
        var districtLabel = $("#districtLbl");
        var districtSelect = $("#district");
        if (b) {
            districtLabel.fadeIn("slow");
            districtSelect.fadeIn("slow");
        }
        else {
            districtLabel.fadeOut("slow");
            districtSelect.fadeOut("slow");
        }
    }

    function setSuburb(b) {
        var suburbSelect = $("#suburb");
        var suburbLabel = $("#suburbLbl");
        if (b) {
            suburbSelect.fadeIn("slow");
            suburbLabel.fadeIn("slow");
        }
        else {
            suburbSelect.fadeOut("slow");
            suburbLabel.fadeOut("slow");
        }

    }
</script>
<div class="container rounded-corners">
    <h2 class="centertext"><font color="#65B5A2">post</font> job</h2>
    <hr />
    @using (Html.BeginForm("Create", "Job", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        <div class="container-form">

            <div class="form-group">
                @Html.LabelFor(model => model.jobtype, new { @class = "control-label" })
                <select class="form-control" required id="jobtype" name="jobtype">
                    <option>Plumbing</option>
                    <option>Electrical</option>
                    <option>Business</option>
                    <option>Crafts</option>
                    <option>Design and web</option>
                    <option>Legal</option>
                    <option>Personal</option>
                    <option>Pets</option>
                    <option>Photography</option>
                    <option>Repair services</option>
                    <option>Writing/Translation</option>
                </select>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.title, new { @class = "control-label" })
                @Html.TextBoxFor(model => model.title, new { @name = "title", @id = "title", @class = "form-control", @type = "text", @placeholder="e.g. Blocked Drain"})

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.description, new { @class = "control-label" })
                <textarea rows="3" name="description" required id="description" class=" form-control"></textarea>
            </div>

            <div class="form-group">
               <label class="control-label">What does it look like?</label>
                <input name="images" type="file" accept="image/*" multiple="multiple" >
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.region, new { @class = "control-label" })
                @Html.DropDownListFor(model => model.region, (SelectList)ViewBag.City, "Select your region", new { @class = "form-control", @id = "region", onchange = "selectRegion(1);showHideSelect(this)" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.district, new { @class = "control-label", @id = "districtLbl" })
                @Html.DropDownListFor(model => model.district, Enumerable.Empty<SelectListItem>(), "Select your district", new { @class = "form-control", @id = "district", onchange = "selectRegion(2);showHideSelect(this)" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.suburb, new { @class = "control-label", @id = "suburbLbl" })
                @Html.DropDownListFor(model => model.suburb, Enumerable.Empty<SelectListItem>(), "Select your suburb", new { @class = "form-control", @id = "suburb", @onchange = "showHideSelect(this)" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.duration, new { @class = "control-label", @id = "durationLbl" })
                <select class="form-control" required id="duration" name="duration">
                    <option>Now (24 Hrs)</option>
                    <option>Soon (48 Hrs)</option>
                    <option>Whenever (72 Hrs +)</option>
                </select>
            </div>

            <div class="form-group">
                <input type="submit" onclick="saveInformation(@User.Identity.IsAuthenticated)"value="Create" class="btn-dontpanic" />
                <br />
                <br />
                @if (User.Identity.IsAuthenticated)
                {

                    <p>
                        @Html.ActionLink("Back to your jobs", "Index")
                    </p>
                }
                else
                {
                    <p>
                        @Html.ActionLink("Back", "Browse")
                    </p>

                }
            </div>
        </div>
    }

</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/scripts/Areas.js")
}
